// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from proj.djinni

#pragma once

#include "djinni/wasm/djinni_wasm.hpp"
#include "nativium/io/FileHelperPlatformService.hpp"

namespace djinni_generated {

struct NTVFileHelperPlatformService : ::djinni::JsInterface<::nativium::io::FileHelperPlatformService, NTVFileHelperPlatformService> {
    using CppType = std::shared_ptr<::nativium::io::FileHelperPlatformService>;
    using CppOptType = std::shared_ptr<::nativium::io::FileHelperPlatformService>;
    using JsType = em::val;
    using Boxed = NTVFileHelperPlatformService;

    static CppType toCpp(JsType j) { return _fromJs(j); }
    static JsType fromCppOpt(const CppOptType& c) { return {_toJs(c)}; }
    static JsType fromCpp(const CppType& c) {
        djinni::checkForNull(c.get(), "NTVFileHelperPlatformService::fromCpp");
        return fromCppOpt(c);
    }


    struct JsProxy: ::djinni::JsProxyBase, ::nativium::io::FileHelperPlatformService, ::djinni::InstanceTracker<JsProxy> {
        JsProxy(const em::val& v) : JsProxyBase(v) {}
        bool createFile(const std::string & path) override;
        bool createFileWithStringContent(const std::string & path,const std::string & content) override;
        bool createFileWithBinaryContent(const std::string & path,const std::vector<uint8_t> & content) override;
        bool createDir(const std::string & path) override;
        std::vector<std::string> listFiles(const std::string & path) override;
        std::string getExtension(const std::string & path) override;
        std::string getFilename(const std::string & path) override;
        std::string getBasename(const std::string & path) override;
        std::string getFilenameFromUrl(const std::string & url) override;
        std::string getBasenameFromUrl(const std::string & url) override;
        bool removeFile(const std::string & path) override;
        bool removeDir(const std::string & path) override;
        bool isDir(const std::string & path) override;
        bool isFile(const std::string & path) override;
        int64_t getFileSize(const std::string & path) override;
        bool copyFile(const std::string & from,const std::string & to) override;
        bool moveFile(const std::string & from,const std::string & to) override;
        std::string join(const std::string & first,const std::string & second) override;
        std::string getFileContentAsString(const std::string & path) override;
        std::vector<uint8_t> getFileContentAsBinary(const std::string & path) override;
        std::string getHomeDir() override;
    };
};

}  // namespace djinni_generated
