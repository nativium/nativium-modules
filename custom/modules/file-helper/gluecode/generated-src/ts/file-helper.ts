// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from proj.djinni


export interface FileHelperPlatformService {
    createFile(path: string): boolean;
    createFileWithStringContent(path: string, content: string): boolean;
    createFileWithBinaryContent(path: string, content: Uint8Array): boolean;
    createDir(path: string): boolean;
    listFiles(path: string): Array<string>;
    getExtension(path: string): string;
    getFilename(path: string): string;
    getBasename(path: string): string;
    getFilenameFromUrl(url: string): string;
    getBasenameFromUrl(url: string): string;
    removeFile(path: string): boolean;
    removeDir(path: string): boolean;
    isDir(path: string): boolean;
    isFile(path: string): boolean;
    getFileSize(path: string): bigint;
    copyFile(from: string, to: string): boolean;
    moveFile(from: string, to: string): boolean;
    join(first: string, second: string): string;
    getFileContentAsString(path: string): string;
    getFileContentAsBinary(path: string): Uint8Array;
    getHomeDir(): string;
}

export interface FileHelper {
    setPlatformService(ps: FileHelperPlatformService): void;
    getPlatformService(): FileHelperPlatformService;
    hasPlatformService(): boolean;
}
export interface FileHelper_statics {
    shared(): FileHelper;
    createFile(path: string): boolean;
    createFileWithStringContent(path: string, content: string): boolean;
    createFileWithBinaryContent(path: string, content: Uint8Array): boolean;
    createDir(path: string): boolean;
    listFiles(path: string): Array<string>;
    getExtension(path: string): string;
    getFilename(path: string): string;
    getBasename(path: string): string;
    getFilenameFromUrl(url: string): string;
    getBasenameFromUrl(url: string): string;
    removeFile(path: string): boolean;
    removeDir(path: string): boolean;
    isDir(path: string): boolean;
    isFile(path: string): boolean;
    getFileSize(path: string): bigint;
    copyFile(from: string, to: string): boolean;
    moveFile(from: string, to: string): boolean;
    join(first: string, second: string): string;
    getFileContentAsString(path: string): string;
    getFileContentAsBinary(path: string): Uint8Array;
    getHomeDir(): string;
}

export interface FileHelper_statics {
    FileHelper: FileHelper_statics;
}
