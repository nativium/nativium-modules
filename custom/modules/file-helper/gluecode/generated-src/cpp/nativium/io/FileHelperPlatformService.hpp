// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from proj.djinni

#pragma once

#include <cstdint>
#include <string>
#include <vector>

namespace nativium { namespace io {

class FileHelperPlatformService {
public:
    virtual ~FileHelperPlatformService() = default;

    virtual bool createFile(const std::string & path) = 0;

    virtual bool createFileWithStringContent(const std::string & path, const std::string & content) = 0;

    virtual bool createFileWithBinaryContent(const std::string & path, const std::vector<uint8_t> & content) = 0;

    virtual bool createDir(const std::string & path) = 0;

    virtual std::vector<std::string> listFiles(const std::string & path) = 0;

    virtual std::string getExtension(const std::string & path) = 0;

    virtual std::string getFilename(const std::string & path) = 0;

    virtual std::string getBasename(const std::string & path) = 0;

    virtual std::string getFilenameFromUrl(const std::string & url) = 0;

    virtual std::string getBasenameFromUrl(const std::string & url) = 0;

    virtual bool removeFile(const std::string & path) = 0;

    virtual bool removeDir(const std::string & path) = 0;

    virtual bool isDir(const std::string & path) = 0;

    virtual bool isFile(const std::string & path) = 0;

    virtual int64_t getFileSize(const std::string & path) = 0;

    virtual bool copyFile(const std::string & from, const std::string & to) = 0;

    virtual bool moveFile(const std::string & from, const std::string & to) = 0;

    virtual std::string join(const std::string & first, const std::string & second) = 0;

    virtual std::string getFileContentAsString(const std::string & path) = 0;

    virtual std::vector<uint8_t> getFileContentAsBinary(const std::string & path) = 0;

    virtual std::string getHomeDir() = 0;
};

} }  // namespace nativium::io
