// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from proj.djinni

#import "nativium/net/http/NTVHttpClientLogger+Private.h"
#import "nativium/net/http/NTVHttpClientLogger.h"
#import "djinni/objc/DJICppWrapperCache+Private.h"
#import "djinni/objc/DJIError.h"
#import "nativium/net/http/NTVHttpRequest+Private.h"
#import "nativium/net/http/NTVHttpResponse+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface NTVHttpClientLogger ()

- (id)initWithCpp:(const std::shared_ptr<::nativium::net::http::HttpClientLogger>&)cppRef;

@end

@implementation NTVHttpClientLogger {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::nativium::net::http::HttpClientLogger>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::nativium::net::http::HttpClientLogger>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

- (void)onRequest:(nonnull NTVHttpRequest *)request {
    try {
        _cppRefHandle.get()->onRequest(::djinni_generated::HttpRequest::toCpp(request));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)onResponse:(nonnull NTVHttpRequest *)request
          response:(nonnull NTVHttpResponse *)response {
    try {
        _cppRefHandle.get()->onResponse(::djinni_generated::HttpRequest::toCpp(request),
                                        ::djinni_generated::HttpResponse::toCpp(response));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto HttpClientLogger::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto HttpClientLogger::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<NTVHttpClientLogger>(cpp);
}

}  // namespace djinni_generated

@end
