// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from proj.djinni

#pragma once

#include <memory>

namespace nativium { namespace net { namespace http {

class HttpClientLogger;
class HttpClientPlatformService;
struct HttpRequest;
struct HttpResponse;

class HttpClient {
public:
    virtual ~HttpClient() = default;

    static /*not-null*/ std::shared_ptr<HttpClient> shared();

    virtual void setPlatformService(const /*not-null*/ std::shared_ptr<HttpClientPlatformService> & ps) = 0;

    virtual /*not-null*/ std::shared_ptr<HttpClientPlatformService> getPlatformService() = 0;

    virtual bool hasPlatformService() = 0;

    virtual HttpResponse doRequest(const HttpRequest & request) = 0;

    virtual void setLogger(const /*not-null*/ std::shared_ptr<HttpClientLogger> & logger) = 0;

    virtual /*not-null*/ std::shared_ptr<HttpClientLogger> getLogger() = 0;

    virtual bool hasLogger() = 0;
};

} } }  // namespace nativium::net::http
