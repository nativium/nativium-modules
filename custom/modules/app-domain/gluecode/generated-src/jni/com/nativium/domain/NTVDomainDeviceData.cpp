// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from proj.djinni

#include "com/nativium/domain/NTVDomainDeviceData.hpp"  // my header
#include "djinni/jni/Marshal.hpp"

namespace djinni_generated {

NTVDomainDeviceData::NTVDomainDeviceData() = default;

NTVDomainDeviceData::~NTVDomainDeviceData() = default;

auto NTVDomainDeviceData::fromCpp(JNIEnv* jniEnv, const CppType& c) -> ::djinni::LocalRef<JniType> {
    const auto& data = ::djinni::JniClass<NTVDomainDeviceData>::get();
    auto r = ::djinni::LocalRef<JniType>{jniEnv->NewObject(data.clazz.get(), data.jconstructor,
                                                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c.uniqueIdentifier)),
                                                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c.name)),
                                                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c.systemName)),
                                                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c.systemVersion)),
                                                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c.model)),
                                                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c.localizedModel)),
                                                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c.appVersion)),
                                                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c.appShortVersion)),
                                                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c.appName)),
                                                           ::djinni::get(::djinni::F32::fromCpp(jniEnv, c.screenWidth)),
                                                           ::djinni::get(::djinni::F32::fromCpp(jniEnv, c.screenHeight)),
                                                           ::djinni::get(::djinni::F32::fromCpp(jniEnv, c.screenScale)),
                                                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c.systemOsName)),
                                                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c.language)),
                                                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c.imei)),
                                                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c.region)))};
    ::djinni::jniExceptionCheck(jniEnv);
    return r;
}

auto NTVDomainDeviceData::toCpp(JNIEnv* jniEnv, JniType j) -> CppType {
    ::djinni::JniLocalScope jscope(jniEnv, 17);
    assert(j != nullptr);
    const auto& data = ::djinni::JniClass<NTVDomainDeviceData>::get();
    return {::djinni::String::toCpp(jniEnv, (jstring)jniEnv->GetObjectField(j, data.field_mUniqueIdentifier)),
            ::djinni::String::toCpp(jniEnv, (jstring)jniEnv->GetObjectField(j, data.field_mName)),
            ::djinni::String::toCpp(jniEnv, (jstring)jniEnv->GetObjectField(j, data.field_mSystemName)),
            ::djinni::String::toCpp(jniEnv, (jstring)jniEnv->GetObjectField(j, data.field_mSystemVersion)),
            ::djinni::String::toCpp(jniEnv, (jstring)jniEnv->GetObjectField(j, data.field_mModel)),
            ::djinni::String::toCpp(jniEnv, (jstring)jniEnv->GetObjectField(j, data.field_mLocalizedModel)),
            ::djinni::String::toCpp(jniEnv, (jstring)jniEnv->GetObjectField(j, data.field_mAppVersion)),
            ::djinni::String::toCpp(jniEnv, (jstring)jniEnv->GetObjectField(j, data.field_mAppShortVersion)),
            ::djinni::String::toCpp(jniEnv, (jstring)jniEnv->GetObjectField(j, data.field_mAppName)),
            ::djinni::F32::toCpp(jniEnv, jniEnv->GetFloatField(j, data.field_mScreenWidth)),
            ::djinni::F32::toCpp(jniEnv, jniEnv->GetFloatField(j, data.field_mScreenHeight)),
            ::djinni::F32::toCpp(jniEnv, jniEnv->GetFloatField(j, data.field_mScreenScale)),
            ::djinni::String::toCpp(jniEnv, (jstring)jniEnv->GetObjectField(j, data.field_mSystemOsName)),
            ::djinni::String::toCpp(jniEnv, (jstring)jniEnv->GetObjectField(j, data.field_mLanguage)),
            ::djinni::String::toCpp(jniEnv, (jstring)jniEnv->GetObjectField(j, data.field_mImei)),
            ::djinni::String::toCpp(jniEnv, (jstring)jniEnv->GetObjectField(j, data.field_mRegion))};
}

}  // namespace djinni_generated
