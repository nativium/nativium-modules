// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from proj.djinni

#include "com/nativium/util/NTVLoggerPlatformService.hpp"  // my header
#include "djinni/jni/Marshal.hpp"

namespace djinni_generated {

NTVLoggerPlatformService::NTVLoggerPlatformService() : ::djinni::JniInterface<::nativium::util::LoggerPlatformService, NTVLoggerPlatformService>() {}

NTVLoggerPlatformService::~NTVLoggerPlatformService() = default;

NTVLoggerPlatformService::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

NTVLoggerPlatformService::JavaProxy::~JavaProxy() = default;

void NTVLoggerPlatformService::JavaProxy::v(const std::string & c_message) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NTVLoggerPlatformService>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_v,
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_message)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NTVLoggerPlatformService::JavaProxy::d(const std::string & c_message) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NTVLoggerPlatformService>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_d,
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_message)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NTVLoggerPlatformService::JavaProxy::i(const std::string & c_message) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NTVLoggerPlatformService>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_i,
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_message)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NTVLoggerPlatformService::JavaProxy::w(const std::string & c_message) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NTVLoggerPlatformService>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_w,
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_message)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NTVLoggerPlatformService::JavaProxy::e(const std::string & c_message) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NTVLoggerPlatformService>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_e,
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_message)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NTVLoggerPlatformService::JavaProxy::setGroup(const std::string & c_group) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NTVLoggerPlatformService>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_setGroup,
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_group)));
    ::djinni::jniExceptionCheck(jniEnv);
}

}  // namespace djinni_generated
