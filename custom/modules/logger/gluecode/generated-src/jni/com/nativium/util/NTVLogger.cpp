// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from proj.djinni

#include "com/nativium/util/NTVLogger.hpp"  // my header
#include "com/nativium/util/NTVLoggerLevel.hpp"
#include "com/nativium/util/NTVLoggerPlatformService.hpp"
#include "djinni/jni/Marshal.hpp"

namespace djinni_generated {

NTVLogger::NTVLogger() : ::djinni::JniInterface<::nativium::util::Logger, NTVLogger>("com/nativium/util/Logger$CppProxy") {}

NTVLogger::~NTVLogger() = default;


CJNIEXPORT void JNICALL Java_com_nativium_util_Logger_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        delete reinterpret_cast<::djinni::CppProxyHandle<::nativium::util::Logger>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_com_nativium_util_Logger_shared(JNIEnv* jniEnv, jobject /*this*/)
{
    try {
        auto r = ::nativium::util::Logger::shared();
        return ::djinni::release(::djinni_generated::NTVLogger::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT void JNICALL Java_com_nativium_util_Logger_00024CppProxy_native_1setPlatformService(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_ps)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::nativium::util::Logger>(nativeRef);
        ref->setPlatformService(::djinni_generated::NTVLoggerPlatformService::toCpp(jniEnv, j_ps));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_com_nativium_util_Logger_00024CppProxy_native_1getPlatformService(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::nativium::util::Logger>(nativeRef);
        auto r = ref->getPlatformService();
        return ::djinni::release(::djinni_generated::NTVLoggerPlatformService::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jboolean JNICALL Java_com_nativium_util_Logger_00024CppProxy_native_1hasPlatformService(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::nativium::util::Logger>(nativeRef);
        auto r = ref->hasPlatformService();
        return ::djinni::release(::djinni::Bool::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jboolean JNICALL Java_com_nativium_util_Logger_00024CppProxy_native_1allowedLevel(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_level)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::nativium::util::Logger>(nativeRef);
        auto r = ref->allowedLevel(::djinni_generated::NTVLoggerLevel::toCpp(jniEnv, j_level));
        return ::djinni::release(::djinni::Bool::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT void JNICALL Java_com_nativium_util_Logger_00024CppProxy_native_1setLevel(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_level)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::nativium::util::Logger>(nativeRef);
        ref->setLevel(::djinni_generated::NTVLoggerLevel::toCpp(jniEnv, j_level));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_nativium_util_Logger_v(JNIEnv* jniEnv, jobject /*this*/, jstring j_message)
{
    try {
        ::nativium::util::Logger::v(::djinni::String::toCpp(jniEnv, j_message));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_nativium_util_Logger_d(JNIEnv* jniEnv, jobject /*this*/, jstring j_message)
{
    try {
        ::nativium::util::Logger::d(::djinni::String::toCpp(jniEnv, j_message));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_nativium_util_Logger_i(JNIEnv* jniEnv, jobject /*this*/, jstring j_message)
{
    try {
        ::nativium::util::Logger::i(::djinni::String::toCpp(jniEnv, j_message));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_nativium_util_Logger_w(JNIEnv* jniEnv, jobject /*this*/, jstring j_message)
{
    try {
        ::nativium::util::Logger::w(::djinni::String::toCpp(jniEnv, j_message));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_nativium_util_Logger_e(JNIEnv* jniEnv, jobject /*this*/, jstring j_message)
{
    try {
        ::nativium::util::Logger::e(::djinni::String::toCpp(jniEnv, j_message));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_nativium_util_Logger_setGroup(JNIEnv* jniEnv, jobject /*this*/, jstring j_group)
{
    try {
        ::nativium::util::Logger::setGroup(::djinni::String::toCpp(jniEnv, j_group));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

}  // namespace djinni_generated
