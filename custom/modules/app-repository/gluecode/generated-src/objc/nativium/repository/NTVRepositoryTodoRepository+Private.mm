// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from proj.djinni

#import "nativium/repository/NTVRepositoryTodoRepository+Private.h"
#import "nativium/repository/NTVRepositoryTodoRepository.h"
#import "djinni/objc/DJICppWrapperCache+Private.h"
#import "djinni/objc/DJIError.h"
#import "djinni/objc/DJIMarshal+Private.h"
#import "nativium/domain/NTVDomainTodo+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface NTVRepositoryTodoRepository ()

- (id)initWithCpp:(const std::shared_ptr<::nativium::repository::TodoRepository>&)cppRef;

@end

@implementation NTVRepositoryTodoRepository {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::nativium::repository::TodoRepository>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::nativium::repository::TodoRepository>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

+ (void)truncate {
    try {
        ::nativium::repository::TodoRepository::truncate();
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (nonnull NTVDomainTodo *)findById:(int64_t)id {
    try {
        auto objcpp_result_ = ::nativium::repository::TodoRepository::findById(::djinni::I64::toCpp(id));
        return ::djinni_generated::Todo::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (nonnull NSArray<NTVDomainTodo *> *)findAllOrderByCreatedAtDesc {
    try {
        auto objcpp_result_ = ::nativium::repository::TodoRepository::findAllOrderByCreatedAtDesc();
        return ::djinni::List<::djinni_generated::Todo>::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (nonnull NSArray<NTVDomainTodo *> *)findByTitle:(nonnull NSString *)title {
    try {
        auto objcpp_result_ = ::nativium::repository::TodoRepository::findByTitle(::djinni::String::toCpp(title));
        return ::djinni::List<::djinni_generated::Todo>::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (BOOL)removeById:(int64_t)id {
    try {
        auto objcpp_result_ = ::nativium::repository::TodoRepository::removeById(::djinni::I64::toCpp(id));
        return ::djinni::Bool::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (int64_t)update:(int64_t)id
             todo:(nonnull NTVDomainTodo *)todo {
    try {
        auto objcpp_result_ = ::nativium::repository::TodoRepository::update(::djinni::I64::toCpp(id),
                                                                             ::djinni_generated::Todo::toCpp(todo));
        return ::djinni::I64::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (int64_t)insert:(nonnull NTVDomainTodo *)todo {
    try {
        auto objcpp_result_ = ::nativium::repository::TodoRepository::insert(::djinni_generated::Todo::toCpp(todo));
        return ::djinni::I64::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (int64_t)add:(nonnull NTVDomainTodo *)todo {
    try {
        auto objcpp_result_ = ::nativium::repository::TodoRepository::add(::djinni_generated::Todo::toCpp(todo));
        return ::djinni::I64::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (BOOL)setDoneById:(int64_t)id
               done:(BOOL)done {
    try {
        auto objcpp_result_ = ::nativium::repository::TodoRepository::setDoneById(::djinni::I64::toCpp(id),
                                                                                  ::djinni::Bool::toCpp(done));
        return ::djinni::Bool::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (int64_t)count {
    try {
        auto objcpp_result_ = ::nativium::repository::TodoRepository::count();
        return ::djinni::I64::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto TodoRepository::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto TodoRepository::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<NTVRepositoryTodoRepository>(cpp);
}

}  // namespace djinni_generated

@end
