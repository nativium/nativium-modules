// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from proj.djinni

#pragma once

#include "djinni/wasm/djinni_wasm.hpp"
#include "nativium/repository/TodoRepository.hpp"

namespace djinni_generated {

struct NTVRepositoryTodoRepository : ::djinni::JsInterface<::nativium::repository::TodoRepository, NTVRepositoryTodoRepository> {
    using CppType = std::shared_ptr<::nativium::repository::TodoRepository>;
    using CppOptType = std::shared_ptr<::nativium::repository::TodoRepository>;
    using JsType = em::val;
    using Boxed = NTVRepositoryTodoRepository;

    static CppType toCpp(JsType j) { return _fromJs(j); }
    static JsType fromCppOpt(const CppOptType& c) { return {_toJs(c)}; }
    static JsType fromCpp(const CppType& c) {
        djinni::checkForNull(c.get(), "NTVRepositoryTodoRepository::fromCpp");
        return fromCppOpt(c);
    }

    static em::val cppProxyMethods();

    static void truncate();
    static em::val findById(int64_t w_id);
    static em::val findAllOrderByCreatedAtDesc();
    static em::val findByTitle(const std::string& w_title);
    static bool removeById(int64_t w_id);
    static int64_t update(int64_t w_id,const em::val& w_todo);
    static int64_t insert(const em::val& w_todo);
    static int64_t add(const em::val& w_todo);
    static bool setDoneById(int64_t w_id,bool w_done);
    static int64_t count();

};

}  // namespace djinni_generated
