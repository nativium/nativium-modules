// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from proj.djinni

#include "nativium/repository/NTVRepositoryTodoRepository.hpp"  // my header
#include "nativium/domain/NTVDomainTodo.hpp"

namespace djinni_generated {

em::val NTVRepositoryTodoRepository::cppProxyMethods() {
    static const em::val methods = em::val::array(std::vector<std::string> {
    });
    return methods;
}

void NTVRepositoryTodoRepository::truncate() {
    try {
        ::nativium::repository::TodoRepository::truncate();
    }
    catch(const std::exception& e) {
        return djinni::ExceptionHandlingTraits<void>::handleNativeException(e);
    }
}
em::val NTVRepositoryTodoRepository::findById(int64_t w_id) {
    try {
        auto r = ::nativium::repository::TodoRepository::findById(::djinni::I64::toCpp(w_id));
        return ::djinni_generated::NTVDomainTodo::fromCpp(r);
    }
    catch(const std::exception& e) {
        return djinni::ExceptionHandlingTraits<::djinni_generated::NTVDomainTodo>::handleNativeException(e);
    }
}
em::val NTVRepositoryTodoRepository::findAllOrderByCreatedAtDesc() {
    try {
        auto r = ::nativium::repository::TodoRepository::findAllOrderByCreatedAtDesc();
        return ::djinni::List<::djinni_generated::NTVDomainTodo>::fromCpp(r);
    }
    catch(const std::exception& e) {
        return djinni::ExceptionHandlingTraits<::djinni::List<::djinni_generated::NTVDomainTodo>>::handleNativeException(e);
    }
}
em::val NTVRepositoryTodoRepository::findByTitle(const std::string& w_title) {
    try {
        auto r = ::nativium::repository::TodoRepository::findByTitle(::djinni::String::toCpp(w_title));
        return ::djinni::List<::djinni_generated::NTVDomainTodo>::fromCpp(r);
    }
    catch(const std::exception& e) {
        return djinni::ExceptionHandlingTraits<::djinni::List<::djinni_generated::NTVDomainTodo>>::handleNativeException(e);
    }
}
bool NTVRepositoryTodoRepository::removeById(int64_t w_id) {
    try {
        auto r = ::nativium::repository::TodoRepository::removeById(::djinni::I64::toCpp(w_id));
        return ::djinni::Bool::fromCpp(r);
    }
    catch(const std::exception& e) {
        return djinni::ExceptionHandlingTraits<::djinni::Bool>::handleNativeException(e);
    }
}
int64_t NTVRepositoryTodoRepository::update(int64_t w_id,const em::val& w_todo) {
    try {
        auto r = ::nativium::repository::TodoRepository::update(::djinni::I64::toCpp(w_id),
               ::djinni_generated::NTVDomainTodo::toCpp(w_todo));
        return ::djinni::I64::fromCpp(r);
    }
    catch(const std::exception& e) {
        return djinni::ExceptionHandlingTraits<::djinni::I64>::handleNativeException(e);
    }
}
int64_t NTVRepositoryTodoRepository::insert(const em::val& w_todo) {
    try {
        auto r = ::nativium::repository::TodoRepository::insert(::djinni_generated::NTVDomainTodo::toCpp(w_todo));
        return ::djinni::I64::fromCpp(r);
    }
    catch(const std::exception& e) {
        return djinni::ExceptionHandlingTraits<::djinni::I64>::handleNativeException(e);
    }
}
int64_t NTVRepositoryTodoRepository::add(const em::val& w_todo) {
    try {
        auto r = ::nativium::repository::TodoRepository::add(::djinni_generated::NTVDomainTodo::toCpp(w_todo));
        return ::djinni::I64::fromCpp(r);
    }
    catch(const std::exception& e) {
        return djinni::ExceptionHandlingTraits<::djinni::I64>::handleNativeException(e);
    }
}
bool NTVRepositoryTodoRepository::setDoneById(int64_t w_id,bool w_done) {
    try {
        auto r = ::nativium::repository::TodoRepository::setDoneById(::djinni::I64::toCpp(w_id),
                    ::djinni::Bool::toCpp(w_done));
        return ::djinni::Bool::fromCpp(r);
    }
    catch(const std::exception& e) {
        return djinni::ExceptionHandlingTraits<::djinni::Bool>::handleNativeException(e);
    }
}
int64_t NTVRepositoryTodoRepository::count() {
    try {
        auto r = ::nativium::repository::TodoRepository::count();
        return ::djinni::I64::fromCpp(r);
    }
    catch(const std::exception& e) {
        return djinni::ExceptionHandlingTraits<::djinni::I64>::handleNativeException(e);
    }
}

EMSCRIPTEN_BINDINGS(nativium_repository_todo_repository) {
    em::class_<::nativium::repository::TodoRepository>("TodoRepository")
        .smart_ptr<std::shared_ptr<::nativium::repository::TodoRepository>>("TodoRepository")
        .function("nativeDestroy", &NTVRepositoryTodoRepository::nativeDestroy)
        .class_function("truncate", NTVRepositoryTodoRepository::truncate)
        .class_function("findById", NTVRepositoryTodoRepository::findById)
        .class_function("findAllOrderByCreatedAtDesc", NTVRepositoryTodoRepository::findAllOrderByCreatedAtDesc)
        .class_function("findByTitle", NTVRepositoryTodoRepository::findByTitle)
        .class_function("removeById", NTVRepositoryTodoRepository::removeById)
        .class_function("update", NTVRepositoryTodoRepository::update)
        .class_function("insert", NTVRepositoryTodoRepository::insert)
        .class_function("add", NTVRepositoryTodoRepository::add)
        .class_function("setDoneById", NTVRepositoryTodoRepository::setDoneById)
        .class_function("count", NTVRepositoryTodoRepository::count)
        ;
}

}  // namespace djinni_generated
