// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from proj.djinni

#include "com/nativium/repository/NTVRepositoryTodoRepository.hpp"  // my header
#include "com/nativium/domain/NTVDomainTodo.hpp"
#include "djinni/jni/Marshal.hpp"

namespace djinni_generated {

NTVRepositoryTodoRepository::NTVRepositoryTodoRepository() : ::djinni::JniInterface<::nativium::repository::TodoRepository, NTVRepositoryTodoRepository>("com/nativium/repository/TodoRepository$CppProxy") {}

NTVRepositoryTodoRepository::~NTVRepositoryTodoRepository() = default;


CJNIEXPORT void JNICALL Java_com_nativium_repository_TodoRepository_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        delete reinterpret_cast<::djinni::CppProxyHandle<::nativium::repository::TodoRepository>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_nativium_repository_TodoRepository_truncate(JNIEnv* jniEnv, jobject /*this*/)
{
    try {
        ::nativium::repository::TodoRepository::truncate();
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT ::djinni_generated::NTVDomainTodo::JniType JNICALL Java_com_nativium_repository_TodoRepository_findById(JNIEnv* jniEnv, jobject /*this*/, jlong j_id)
{
    try {
        auto r = ::nativium::repository::TodoRepository::findById(::djinni::I64::toCpp(jniEnv, j_id));
        return ::djinni::release(::djinni_generated::NTVDomainTodo::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_com_nativium_repository_TodoRepository_findAllOrderByCreatedAtDesc(JNIEnv* jniEnv, jobject /*this*/)
{
    try {
        auto r = ::nativium::repository::TodoRepository::findAllOrderByCreatedAtDesc();
        return ::djinni::release(::djinni::List<::djinni_generated::NTVDomainTodo>::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_com_nativium_repository_TodoRepository_findByTitle(JNIEnv* jniEnv, jobject /*this*/, jstring j_title)
{
    try {
        auto r = ::nativium::repository::TodoRepository::findByTitle(::djinni::String::toCpp(jniEnv, j_title));
        return ::djinni::release(::djinni::List<::djinni_generated::NTVDomainTodo>::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jboolean JNICALL Java_com_nativium_repository_TodoRepository_removeById(JNIEnv* jniEnv, jobject /*this*/, jlong j_id)
{
    try {
        auto r = ::nativium::repository::TodoRepository::removeById(::djinni::I64::toCpp(jniEnv, j_id));
        return ::djinni::release(::djinni::Bool::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jlong JNICALL Java_com_nativium_repository_TodoRepository_update(JNIEnv* jniEnv, jobject /*this*/, jlong j_id, ::djinni_generated::NTVDomainTodo::JniType j_todo)
{
    try {
        auto r = ::nativium::repository::TodoRepository::update(::djinni::I64::toCpp(jniEnv, j_id),
                                                                ::djinni_generated::NTVDomainTodo::toCpp(jniEnv, j_todo));
        return ::djinni::release(::djinni::I64::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jlong JNICALL Java_com_nativium_repository_TodoRepository_insert(JNIEnv* jniEnv, jobject /*this*/, ::djinni_generated::NTVDomainTodo::JniType j_todo)
{
    try {
        auto r = ::nativium::repository::TodoRepository::insert(::djinni_generated::NTVDomainTodo::toCpp(jniEnv, j_todo));
        return ::djinni::release(::djinni::I64::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jlong JNICALL Java_com_nativium_repository_TodoRepository_add(JNIEnv* jniEnv, jobject /*this*/, ::djinni_generated::NTVDomainTodo::JniType j_todo)
{
    try {
        auto r = ::nativium::repository::TodoRepository::add(::djinni_generated::NTVDomainTodo::toCpp(jniEnv, j_todo));
        return ::djinni::release(::djinni::I64::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jboolean JNICALL Java_com_nativium_repository_TodoRepository_setDoneById(JNIEnv* jniEnv, jobject /*this*/, jlong j_id, jboolean j_done)
{
    try {
        auto r = ::nativium::repository::TodoRepository::setDoneById(::djinni::I64::toCpp(jniEnv, j_id),
                                                                     ::djinni::Bool::toCpp(jniEnv, j_done));
        return ::djinni::release(::djinni::Bool::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jlong JNICALL Java_com_nativium_repository_TodoRepository_count(JNIEnv* jniEnv, jobject /*this*/)
{
    try {
        auto r = ::nativium::repository::TodoRepository::count();
        return ::djinni::release(::djinni::I64::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
