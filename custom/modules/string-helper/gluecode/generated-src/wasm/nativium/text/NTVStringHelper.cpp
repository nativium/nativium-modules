// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from proj.djinni

#include "nativium/text/NTVStringHelper.hpp"  // my header

namespace djinni_generated {

em::val NTVStringHelper::cppProxyMethods() {
    static const em::val methods = em::val::array(std::vector<std::string> {
    });
    return methods;
}

std::string NTVStringHelper::trim(const std::string& w_value) {
    try {
        auto r = ::nativium::text::StringHelper::trim(::djinni::String::toCpp(w_value));
        return ::djinni::String::fromCpp(r);
    }
    catch(const std::exception& e) {
        return djinni::ExceptionHandlingTraits<::djinni::String>::handleNativeException(e);
    }
}
std::string NTVStringHelper::leftTrim(const std::string& w_value) {
    try {
        auto r = ::nativium::text::StringHelper::leftTrim(::djinni::String::toCpp(w_value));
        return ::djinni::String::fromCpp(r);
    }
    catch(const std::exception& e) {
        return djinni::ExceptionHandlingTraits<::djinni::String>::handleNativeException(e);
    }
}
std::string NTVStringHelper::rightTrim(const std::string& w_value) {
    try {
        auto r = ::nativium::text::StringHelper::rightTrim(::djinni::String::toCpp(w_value));
        return ::djinni::String::fromCpp(r);
    }
    catch(const std::exception& e) {
        return djinni::ExceptionHandlingTraits<::djinni::String>::handleNativeException(e);
    }
}
std::string NTVStringHelper::toLower(const std::string& w_value) {
    try {
        auto r = ::nativium::text::StringHelper::toLower(::djinni::String::toCpp(w_value));
        return ::djinni::String::fromCpp(r);
    }
    catch(const std::exception& e) {
        return djinni::ExceptionHandlingTraits<::djinni::String>::handleNativeException(e);
    }
}
std::string NTVStringHelper::toUpper(const std::string& w_value) {
    try {
        auto r = ::nativium::text::StringHelper::toUpper(::djinni::String::toCpp(w_value));
        return ::djinni::String::fromCpp(r);
    }
    catch(const std::exception& e) {
        return djinni::ExceptionHandlingTraits<::djinni::String>::handleNativeException(e);
    }
}
em::val NTVStringHelper::split(const std::string& w_text,const std::string& w_sep,bool w_trimEmpty) {
    try {
        auto r = ::nativium::text::StringHelper::split(::djinni::String::toCpp(w_text),
              ::djinni::String::toCpp(w_sep),
              ::djinni::Bool::toCpp(w_trimEmpty));
        return ::djinni::List<::djinni::String>::fromCpp(r);
    }
    catch(const std::exception& e) {
        return djinni::ExceptionHandlingTraits<::djinni::List<::djinni::String>>::handleNativeException(e);
    }
}
std::string NTVStringHelper::encodeUri(const std::string& w_value) {
    try {
        auto r = ::nativium::text::StringHelper::encodeUri(::djinni::String::toCpp(w_value));
        return ::djinni::String::fromCpp(r);
    }
    catch(const std::exception& e) {
        return djinni::ExceptionHandlingTraits<::djinni::String>::handleNativeException(e);
    }
}
std::string NTVStringHelper::decodeUri(const std::string& w_value) {
    try {
        auto r = ::nativium::text::StringHelper::decodeUri(::djinni::String::toCpp(w_value));
        return ::djinni::String::fromCpp(r);
    }
    catch(const std::exception& e) {
        return djinni::ExceptionHandlingTraits<::djinni::String>::handleNativeException(e);
    }
}

EMSCRIPTEN_BINDINGS(nativium_text_string_helper) {
    em::class_<::nativium::text::StringHelper>("StringHelper")
        .smart_ptr<std::shared_ptr<::nativium::text::StringHelper>>("StringHelper")
        .function("nativeDestroy", &NTVStringHelper::nativeDestroy)
        .class_function("trim", NTVStringHelper::trim)
        .class_function("leftTrim", NTVStringHelper::leftTrim)
        .class_function("rightTrim", NTVStringHelper::rightTrim)
        .class_function("toLower", NTVStringHelper::toLower)
        .class_function("toUpper", NTVStringHelper::toUpper)
        .class_function("split", NTVStringHelper::split)
        .class_function("encodeUri", NTVStringHelper::encodeUri)
        .class_function("decodeUri", NTVStringHelper::decodeUri)
        ;
}

}  // namespace djinni_generated
