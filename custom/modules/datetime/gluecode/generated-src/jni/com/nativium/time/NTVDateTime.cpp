// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from proj.djinni

#include "com/nativium/time/NTVDateTime.hpp"  // my header
#include "djinni/jni/Marshal.hpp"

namespace djinni_generated {

NTVDateTime::NTVDateTime() : ::djinni::JniInterface<::nativium::time::DateTime, NTVDateTime>("com/nativium/time/DateTime$CppProxy") {}

NTVDateTime::~NTVDateTime() = default;


CJNIEXPORT void JNICALL Java_com_nativium_time_DateTime_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        delete reinterpret_cast<::djinni::CppProxyHandle<::nativium::time::DateTime>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_com_nativium_time_DateTime_getDateTimeFromString(JNIEnv* jniEnv, jobject /*this*/, jstring j_value)
{
    try {
        auto r = ::nativium::time::DateTime::getDateTimeFromString(::djinni::String::toCpp(jniEnv, j_value));
        return ::djinni::release(::djinni::Date::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jstring JNICALL Java_com_nativium_time_DateTime_getStringFromDateTime(JNIEnv* jniEnv, jobject /*this*/, jobject j_value)
{
    try {
        auto r = ::nativium::time::DateTime::getStringFromDateTime(::djinni::Date::toCpp(jniEnv, j_value));
        return ::djinni::release(::djinni::String::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_com_nativium_time_DateTime_getDateTimeFromStringWithFormat(JNIEnv* jniEnv, jobject /*this*/, jstring j_value, jstring j_format)
{
    try {
        auto r = ::nativium::time::DateTime::getDateTimeFromStringWithFormat(::djinni::String::toCpp(jniEnv, j_value),
                                                                             ::djinni::String::toCpp(jniEnv, j_format));
        return ::djinni::release(::djinni::Date::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jstring JNICALL Java_com_nativium_time_DateTime_getCurrentDateTimeAsString(JNIEnv* jniEnv, jobject /*this*/)
{
    try {
        auto r = ::nativium::time::DateTime::getCurrentDateTimeAsString();
        return ::djinni::release(::djinni::String::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_com_nativium_time_DateTime_getCurrentDateTime(JNIEnv* jniEnv, jobject /*this*/)
{
    try {
        auto r = ::nativium::time::DateTime::getCurrentDateTime();
        return ::djinni::release(::djinni::Date::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_com_nativium_time_DateTime_getDateTimeFromSeconds(JNIEnv* jniEnv, jobject /*this*/, jlong j_value)
{
    try {
        auto r = ::nativium::time::DateTime::getDateTimeFromSeconds(::djinni::I64::toCpp(jniEnv, j_value));
        return ::djinni::release(::djinni::Date::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_com_nativium_time_DateTime_getDateTimeFromMilliseconds(JNIEnv* jniEnv, jobject /*this*/, jlong j_value)
{
    try {
        auto r = ::nativium::time::DateTime::getDateTimeFromMilliseconds(::djinni::I64::toCpp(jniEnv, j_value));
        return ::djinni::release(::djinni::Date::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jlong JNICALL Java_com_nativium_time_DateTime_getTimestampInMillisecondsFromDateTime(JNIEnv* jniEnv, jobject /*this*/, jobject j_value)
{
    try {
        auto r = ::nativium::time::DateTime::getTimestampInMillisecondsFromDateTime(::djinni::Date::toCpp(jniEnv, j_value));
        return ::djinni::release(::djinni::I64::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jlong JNICALL Java_com_nativium_time_DateTime_getTimestampInSecondsFromDateTime(JNIEnv* jniEnv, jobject /*this*/, jobject j_value)
{
    try {
        auto r = ::nativium::time::DateTime::getTimestampInSecondsFromDateTime(::djinni::Date::toCpp(jniEnv, j_value));
        return ::djinni::release(::djinni::I64::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jstring JNICALL Java_com_nativium_time_DateTime_getCurrentTimestampInSecondsAsString(JNIEnv* jniEnv, jobject /*this*/)
{
    try {
        auto r = ::nativium::time::DateTime::getCurrentTimestampInSecondsAsString();
        return ::djinni::release(::djinni::String::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jlong JNICALL Java_com_nativium_time_DateTime_getCurrentTimestampInSeconds(JNIEnv* jniEnv, jobject /*this*/)
{
    try {
        auto r = ::nativium::time::DateTime::getCurrentTimestampInSeconds();
        return ::djinni::release(::djinni::I64::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jstring JNICALL Java_com_nativium_time_DateTime_getCurrentTimestampInMillisecondsAsString(JNIEnv* jniEnv, jobject /*this*/)
{
    try {
        auto r = ::nativium::time::DateTime::getCurrentTimestampInMillisecondsAsString();
        return ::djinni::release(::djinni::String::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jlong JNICALL Java_com_nativium_time_DateTime_getCurrentTimestampInMilliseconds(JNIEnv* jniEnv, jobject /*this*/)
{
    try {
        auto r = ::nativium::time::DateTime::getCurrentTimestampInMilliseconds();
        return ::djinni::release(::djinni::I64::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jstring JNICALL Java_com_nativium_time_DateTime_getFormattedStringFromDateTime(JNIEnv* jniEnv, jobject /*this*/, jobject j_value, jstring j_format)
{
    try {
        auto r = ::nativium::time::DateTime::getFormattedStringFromDateTime(::djinni::Date::toCpp(jniEnv, j_value),
                                                                            ::djinni::String::toCpp(jniEnv, j_format));
        return ::djinni::release(::djinni::String::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jlong JNICALL Java_com_nativium_time_DateTime_getMillisecondsFromTimeString(JNIEnv* jniEnv, jobject /*this*/, jstring j_value)
{
    try {
        auto r = ::nativium::time::DateTime::getMillisecondsFromTimeString(::djinni::String::toCpp(jniEnv, j_value));
        return ::djinni::release(::djinni::I64::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_com_nativium_time_DateTime_getDateTimeFromTimeInPosixTimezone(JNIEnv* jniEnv, jobject /*this*/, jstring j_time, jstring j_timezone)
{
    try {
        auto r = ::nativium::time::DateTime::getDateTimeFromTimeInPosixTimezone(::djinni::String::toCpp(jniEnv, j_time),
                                                                                ::djinni::String::toCpp(jniEnv, j_timezone));
        return ::djinni::release(::djinni::Date::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
