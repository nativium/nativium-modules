// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from proj.djinni

#include "nativium/core/NTVCoreApplicationCore.hpp"  // my header
#include "nativium/domain/NTVDomainCustomer.hpp"
#include "nativium/domain/NTVDomainDeviceData.hpp"
#include "nativium/domain/NTVDomainInitializationData.hpp"

namespace djinni_generated {

em::val NTVCoreApplicationCore::cppProxyMethods() {
    static const em::val methods = em::val::array(std::vector<std::string> {
        "initialize",
        "getInitializationData",
        "getDeviceData",
        "getCustomer",
        "setCustomer",
        "getVersion",
        "getDbDriverVersion",
        "isInitialized",
    });
    return methods;
}

em::val NTVCoreApplicationCore::shared() {
    try {
        auto r = ::nativium::core::ApplicationCore::shared();
        return ::djinni_generated::NTVCoreApplicationCore::fromCpp(r);
    }
    catch(const std::exception& e) {
        return djinni::ExceptionHandlingTraits<::djinni_generated::NTVCoreApplicationCore>::handleNativeException(e);
    }
}
void NTVCoreApplicationCore::initialize(const CppType& self, const em::val& w_initializationData,const em::val& w_deviceData) {
    try {
        self->initialize(::djinni_generated::NTVDomainInitializationData::toCpp(w_initializationData),
                   ::djinni_generated::NTVDomainDeviceData::toCpp(w_deviceData));
    }
    catch(const std::exception& e) {
        return djinni::ExceptionHandlingTraits<void>::handleNativeException(e);
    }
}
em::val NTVCoreApplicationCore::getInitializationData(const CppType& self) {
    try {
        auto r = self->getInitializationData();
        return ::djinni_generated::NTVDomainInitializationData::fromCpp(r);
    }
    catch(const std::exception& e) {
        return djinni::ExceptionHandlingTraits<::djinni_generated::NTVDomainInitializationData>::handleNativeException(e);
    }
}
em::val NTVCoreApplicationCore::getDeviceData(const CppType& self) {
    try {
        auto r = self->getDeviceData();
        return ::djinni_generated::NTVDomainDeviceData::fromCpp(r);
    }
    catch(const std::exception& e) {
        return djinni::ExceptionHandlingTraits<::djinni_generated::NTVDomainDeviceData>::handleNativeException(e);
    }
}
em::val NTVCoreApplicationCore::getCustomer(const CppType& self) {
    try {
        auto r = self->getCustomer();
        return ::djinni_generated::NTVDomainCustomer::fromCpp(r);
    }
    catch(const std::exception& e) {
        return djinni::ExceptionHandlingTraits<::djinni_generated::NTVDomainCustomer>::handleNativeException(e);
    }
}
void NTVCoreApplicationCore::setCustomer(const CppType& self, const em::val& w_customer) {
    try {
        self->setCustomer(::djinni_generated::NTVDomainCustomer::toCpp(w_customer));
    }
    catch(const std::exception& e) {
        return djinni::ExceptionHandlingTraits<void>::handleNativeException(e);
    }
}
std::string NTVCoreApplicationCore::getVersion(const CppType& self) {
    try {
        auto r = self->getVersion();
        return ::djinni::String::fromCpp(r);
    }
    catch(const std::exception& e) {
        return djinni::ExceptionHandlingTraits<::djinni::String>::handleNativeException(e);
    }
}
std::string NTVCoreApplicationCore::getDbDriverVersion(const CppType& self) {
    try {
        auto r = self->getDbDriverVersion();
        return ::djinni::String::fromCpp(r);
    }
    catch(const std::exception& e) {
        return djinni::ExceptionHandlingTraits<::djinni::String>::handleNativeException(e);
    }
}
bool NTVCoreApplicationCore::isInitialized(const CppType& self) {
    try {
        auto r = self->isInitialized();
        return ::djinni::Bool::fromCpp(r);
    }
    catch(const std::exception& e) {
        return djinni::ExceptionHandlingTraits<::djinni::Bool>::handleNativeException(e);
    }
}

EMSCRIPTEN_BINDINGS(nativium_core_application_core) {
    em::class_<::nativium::core::ApplicationCore>("ApplicationCore")
        .smart_ptr<std::shared_ptr<::nativium::core::ApplicationCore>>("ApplicationCore")
        .function("nativeDestroy", &NTVCoreApplicationCore::nativeDestroy)
        .class_function("shared", NTVCoreApplicationCore::shared)
        .function("initialize", NTVCoreApplicationCore::initialize)
        .function("getInitializationData", NTVCoreApplicationCore::getInitializationData)
        .function("getDeviceData", NTVCoreApplicationCore::getDeviceData)
        .function("getCustomer", NTVCoreApplicationCore::getCustomer)
        .function("setCustomer", NTVCoreApplicationCore::setCustomer)
        .function("getVersion", NTVCoreApplicationCore::getVersion)
        .function("getDbDriverVersion", NTVCoreApplicationCore::getDbDriverVersion)
        .function("isInitialized", NTVCoreApplicationCore::isInitialized)
        ;
}

}  // namespace djinni_generated
