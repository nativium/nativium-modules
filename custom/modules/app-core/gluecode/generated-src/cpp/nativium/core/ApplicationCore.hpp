// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from proj.djinni

#pragma once

#include "nativium/domain/Customer.hpp"
#include "nativium/domain/DeviceData.hpp"
#include "nativium/domain/InitializationData.hpp"
#include <memory>
#include <string>

namespace nativium { namespace core {

class ApplicationCore {
public:
    virtual ~ApplicationCore() = default;

    static /*not-null*/ std::shared_ptr<ApplicationCore> shared();

    virtual void initialize(const ::nativium::domain::InitializationData & initializationData, const ::nativium::domain::DeviceData & deviceData) = 0;

    virtual ::nativium::domain::InitializationData getInitializationData() = 0;

    virtual ::nativium::domain::DeviceData getDeviceData() = 0;

    virtual ::nativium::domain::Customer getCustomer() = 0;

    virtual void setCustomer(const ::nativium::domain::Customer & customer) = 0;

    virtual std::string getVersion() = 0;

    virtual std::string getDbDriverVersion() = 0;

    virtual bool isInitialized() = 0;
};

} }  // namespace nativium::core
