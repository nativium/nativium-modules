// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from proj.djinni

#include "com/nativium/core/NTVCoreApplicationCore.hpp"  // my header
#include "com/nativium/domain/NTVDomainCustomer.hpp"
#include "com/nativium/domain/NTVDomainDeviceData.hpp"
#include "com/nativium/domain/NTVDomainInitializationData.hpp"
#include "djinni/jni/Marshal.hpp"

namespace djinni_generated {

NTVCoreApplicationCore::NTVCoreApplicationCore() : ::djinni::JniInterface<::nativium::core::ApplicationCore, NTVCoreApplicationCore>("com/nativium/core/ApplicationCore$CppProxy") {}

NTVCoreApplicationCore::~NTVCoreApplicationCore() = default;


CJNIEXPORT void JNICALL Java_com_nativium_core_ApplicationCore_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        delete reinterpret_cast<::djinni::CppProxyHandle<::nativium::core::ApplicationCore>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_com_nativium_core_ApplicationCore_shared(JNIEnv* jniEnv, jobject /*this*/)
{
    try {
        auto r = ::nativium::core::ApplicationCore::shared();
        return ::djinni::release(::djinni_generated::NTVCoreApplicationCore::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT void JNICALL Java_com_nativium_core_ApplicationCore_00024CppProxy_native_1initialize(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, ::djinni_generated::NTVDomainInitializationData::JniType j_initializationData, ::djinni_generated::NTVDomainDeviceData::JniType j_deviceData)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::nativium::core::ApplicationCore>(nativeRef);
        ref->initialize(::djinni_generated::NTVDomainInitializationData::toCpp(jniEnv, j_initializationData),
                        ::djinni_generated::NTVDomainDeviceData::toCpp(jniEnv, j_deviceData));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT ::djinni_generated::NTVDomainInitializationData::JniType JNICALL Java_com_nativium_core_ApplicationCore_00024CppProxy_native_1getInitializationData(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::nativium::core::ApplicationCore>(nativeRef);
        auto r = ref->getInitializationData();
        return ::djinni::release(::djinni_generated::NTVDomainInitializationData::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT ::djinni_generated::NTVDomainDeviceData::JniType JNICALL Java_com_nativium_core_ApplicationCore_00024CppProxy_native_1getDeviceData(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::nativium::core::ApplicationCore>(nativeRef);
        auto r = ref->getDeviceData();
        return ::djinni::release(::djinni_generated::NTVDomainDeviceData::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT ::djinni_generated::NTVDomainCustomer::JniType JNICALL Java_com_nativium_core_ApplicationCore_00024CppProxy_native_1getCustomer(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::nativium::core::ApplicationCore>(nativeRef);
        auto r = ref->getCustomer();
        return ::djinni::release(::djinni_generated::NTVDomainCustomer::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT void JNICALL Java_com_nativium_core_ApplicationCore_00024CppProxy_native_1setCustomer(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, ::djinni_generated::NTVDomainCustomer::JniType j_customer)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::nativium::core::ApplicationCore>(nativeRef);
        ref->setCustomer(::djinni_generated::NTVDomainCustomer::toCpp(jniEnv, j_customer));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jstring JNICALL Java_com_nativium_core_ApplicationCore_00024CppProxy_native_1getVersion(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::nativium::core::ApplicationCore>(nativeRef);
        auto r = ref->getVersion();
        return ::djinni::release(::djinni::String::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jstring JNICALL Java_com_nativium_core_ApplicationCore_00024CppProxy_native_1getDbDriverVersion(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::nativium::core::ApplicationCore>(nativeRef);
        auto r = ref->getDbDriverVersion();
        return ::djinni::release(::djinni::String::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jboolean JNICALL Java_com_nativium_core_ApplicationCore_00024CppProxy_native_1isInitialized(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::nativium::core::ApplicationCore>(nativeRef);
        auto r = ref->isInitialized();
        return ::djinni::release(::djinni::Bool::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
