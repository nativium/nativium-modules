// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from proj.djinni

#include "com/nativium/net/http/NTVHttpServerConfig.hpp"  // my header
#include "djinni/jni/Marshal.hpp"

namespace djinni_generated {

NTVHttpServerConfig::NTVHttpServerConfig() = default;

NTVHttpServerConfig::~NTVHttpServerConfig() = default;

auto NTVHttpServerConfig::fromCpp(JNIEnv* jniEnv, const CppType& c) -> ::djinni::LocalRef<JniType> {
    const auto& data = ::djinni::JniClass<NTVHttpServerConfig>::get();
    auto r = ::djinni::LocalRef<JniType>{jniEnv->NewObject(data.clazz.get(), data.jconstructor,
                                                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c.port)),
                                                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c.staticPath)))};
    ::djinni::jniExceptionCheck(jniEnv);
    return r;
}

auto NTVHttpServerConfig::toCpp(JNIEnv* jniEnv, JniType j) -> CppType {
    ::djinni::JniLocalScope jscope(jniEnv, 3);
    assert(j != nullptr);
    const auto& data = ::djinni::JniClass<NTVHttpServerConfig>::get();
    return {::djinni::I32::toCpp(jniEnv, jniEnv->GetIntField(j, data.field_mPort)),
            ::djinni::String::toCpp(jniEnv, (jstring)jniEnv->GetObjectField(j, data.field_mStaticPath))};
}

}  // namespace djinni_generated
