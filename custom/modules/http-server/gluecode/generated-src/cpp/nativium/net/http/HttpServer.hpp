// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from proj.djinni

#pragma once

#include <cstdint>
#include <memory>
#include <string>

namespace nativium { namespace net { namespace http {

struct HttpServerConfig;

class HttpServer {
public:
    virtual ~HttpServer() = default;

    static /*not-null*/ std::shared_ptr<HttpServer> shared();

    virtual void initialize(const HttpServerConfig & config) = 0;

    virtual HttpServerConfig getConfig() = 0;

    virtual void start() = 0;

    virtual void stop() = 0;

    virtual void waitForTermination() = 0;

    virtual int32_t getSocketPort() = 0;

    virtual std::string getSocketHost() = 0;

    virtual std::string getSocketAddress() = 0;

    virtual bool isSocketSecure() = 0;

    virtual bool isRunning() = 0;
};

} } }  // namespace nativium::net::http
